#!/bin/bash

# Color codes for terminal output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color (reset)

# Logging functions
print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Github Configuration
GITHUB_RAW="https://raw.githubusercontent.com"
GITHUB_USER="xenvoid404"
GITHUB_REPO="autoscript-tunneling"
GITHUB_REPO_BRANCH="master"
GITHUB_RAW_REPO="${GITHUB_RAW}/${GITHUB_USER}/${GITHUB_REPO}/${GITHUB_REPO_BRANCH}"

# Configure HAProxy with error handling and verification
setup_haproxy() {
    print_info "Configuring HAProxy load balancer..."
    
    # Download HAProxy configuration
    if ! curl -sSf "${GITHUB_RAW_REPO}/config/haproxy.cfg" -o /etc/haproxy/haproxy.cfg; then
        print_error "Failed to download HAProxy configuration"
        exit 1
    fi
    
    # Create combined PEM certificate
    print_info "Generating combined SSL certificate..."
    if [ ! -f /etc/certificates/fullchain.crt ] || [ ! -f /etc/certificates/private.key ]; then
        print_error "SSL certificate files not found"
        exit 1
    fi
    
    cat /etc/certificates/fullchain.crt /etc/certificates/private.key > /etc/certificates/full.pem
    chmod 600 /etc/certificates/full.pem
    
    # Validate HAProxy configuration
    if haproxy -c -f /etc/haproxy/haproxy.cfg; then
        print_success "HAProxy configured successfully"
        systemctl restart haproxy
    else
        print_error "Invalid HAProxy configuration"
        exit 1
    fi
}

# Configure Nginx web server with proper cleanup and validation
setup_nginx() {
    print_info "Setting up Nginx web server..."
    
    # Clean existing installation
    rm -rf /etc/nginx
    
    # Create fresh Nginx directory
    mkdir -p /etc/nginx
    
    # Download and extract Nginx configuration
    if ! curl -sSf "${GITHUB_RAW_REPO}/config/nginx.zip" -o /etc/nginx/nginx.zip; then
        print_error "Failed to download Nginx configuration"
        exit 1
    fi
    
    if ! unzip -q /etc/nginx/nginx.zip -d /etc/nginx/; then
        print_error "Failed to extract Nginx configuration"
        exit 1
    fi
    
    rm -f /etc/nginx/nginx.zip
    
    # Test Nginx configuration
    if nginx -t; then
        print_success "Nginx configured successfully"
        systemctl restart nginx
    else
        print_error "Invalid Nginx configuration"
        exit 1
    fi
}

setup_haproxy
setup_nginx
rm -rf -- "$0"